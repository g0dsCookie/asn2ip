name: Build Docker Image

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 1'
  push:
    branches: [ master ]
  release:
    types: [ created ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get current release
        id: reporelease
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          owner: g0dsCookie
          repo: asn2ip
          excludes: prerelease, drafts

      - name: Set version
        run: |
          if [[ "${GITHUB_REF#refs/heads/}" == "master" ]]; then
            echo "ASN2IP_VERSION=${{ steps.reporelease.outputs.release }}" >>${GITHUB_ENV}
          else
            echo "ASN2IP_VERSION=${GITHUB_REF#refs/tags/}" >>${GITHUB_ENV}
          fi
      - name: Setup docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/g0dscookie/asn2ip
          tags: |
            type=schedule
            type=ref,event=branch
            type=semver,pattern={{version}},value=${{ env.ASN2IP_VERSION }}
            type=semver,pattern={{major}},value=${{ env.ASN2IP_VERSION }}
            type=semver,pattern={{major}}.{{minor}},value=${{ env.ASN2IP_VERSION }}
            type=sha
      - name: Setup QEMU for multiarch images
        uses: docker/setup-qemu-action@v1

      - name: Setup buildx
        uses: docker/setup-buildx-action@v1

      - name: Log into registry ghcr.io
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          build-args: |
            VERSION=${{ env.ASN2IP_VERSION }}
            REVISION=${{ env.GITHUB_SHA }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}